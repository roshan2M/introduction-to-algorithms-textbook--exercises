package section71;

import java.util.Arrays;

import section71.Quicksort;

public class MedianOfThreePartition {
	
	public static void main(String[] args) {
		int[] a = {-1, 9, 5, 2, 8, -3};
		medianOfThreePartitionQuicksort(a, 0, a.length-1);
		System.out.println(Arrays.toString(a));
		
		int[] b = {-5, 8, 3, 9, 2, 11, -3, 4, 9, 0};
		medianOfThreePartitionQuicksort(a, 0, a.length-1);
		System.out.println(Arrays.toString(a));
	}
	
	public static int medianOfThree(int[] a, int left, int right) {
		int center = (left + right) / 2;
		if (a[left] > a[center]) Quicksort.swap(a, left, center);
		if (a[left] > a[right]) Quicksort.swap(a, left, right);
		if (a[center] > a[right]) Quicksort.swap(a, center, right);
		Quicksort.swap(a, center, right);
		return a[right];
	}
	
	public static int medianOfThreePartition(int[] a, int p, int r) {
		int x = medianOfThree(a, p, r);
		int i = p-1;
		for (int j = p; j < r; j++) {
			if (a[j] <= x) {
				i++;
				Quicksort.swap(a, i, j);
			}
		}
		Quicksort.swap(a, i+1, r);
		return i+1;
	}
	
	public static void medianOfThreePartitionQuicksort(int[] a, int p, int r) {
		if (p < r) {
			int q = medianOfThreePartition(a, p, r);
			medianOfThreePartitionQuicksort(a, p, q-1);
			medianOfThreePartitionQuicksort(a, q+1, r);
		}
	}

}
